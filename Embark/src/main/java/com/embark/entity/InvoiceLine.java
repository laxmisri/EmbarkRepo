package com.embark.entity;

// Generated 18 Jul, 2016 5:56:24 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InvoiceLine generated by hbm2java
 */
@Entity
@Table(name = "invoice_line", catalog = "salex")
public class InvoiceLine implements java.io.Serializable {

	private int invoiceLineId;
	private OrganizationMaster organizationMaster;
	private DivisionMaster divisionMaster;
	private DealerItemMaster dealerItemMaster;
	private Invoice invoice;
	private int quantity;
	private int ratePerUnit;
	private Integer ownerId;
	private Boolean isInternal;
	private Integer createdBy;
	private Date createdDate;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;
	private String attribute1;
	private String attribute2;
	private String attribute3;

	public InvoiceLine() {
	}

	public InvoiceLine(int invoiceLineId,
			OrganizationMaster organizationMaster,
			DivisionMaster divisionMaster, DealerItemMaster dealerItemMaster,
			Invoice invoice, int quantity, int ratePerUnit) {
		this.invoiceLineId = invoiceLineId;
		this.organizationMaster = organizationMaster;
		this.divisionMaster = divisionMaster;
		this.dealerItemMaster = dealerItemMaster;
		this.invoice = invoice;
		this.quantity = quantity;
		this.ratePerUnit = ratePerUnit;
	}

	public InvoiceLine(int invoiceLineId,
			OrganizationMaster organizationMaster,
			DivisionMaster divisionMaster, DealerItemMaster dealerItemMaster,
			Invoice invoice, int quantity, int ratePerUnit, Integer ownerId,
			Boolean isInternal, Integer createdBy, Date createdDate,
			Integer lastModifiedBy, Date lastModifiedDate, String attribute1,
			String attribute2, String attribute3) {
		this.invoiceLineId = invoiceLineId;
		this.organizationMaster = organizationMaster;
		this.divisionMaster = divisionMaster;
		this.dealerItemMaster = dealerItemMaster;
		this.invoice = invoice;
		this.quantity = quantity;
		this.ratePerUnit = ratePerUnit;
		this.ownerId = ownerId;
		this.isInternal = isInternal;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
		this.attribute1 = attribute1;
		this.attribute2 = attribute2;
		this.attribute3 = attribute3;
	}

	@Id
	@Column(name = "Invoice_Line_Id", unique = true, nullable = false)
	public int getInvoiceLineId() {
		return this.invoiceLineId;
	}

	public void setInvoiceLineId(int invoiceLineId) {
		this.invoiceLineId = invoiceLineId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Org_Id", nullable = false)
	public OrganizationMaster getOrganizationMaster() {
		return this.organizationMaster;
	}

	public void setOrganizationMaster(OrganizationMaster organizationMaster) {
		this.organizationMaster = organizationMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Div_Id", nullable = false)
	public DivisionMaster getDivisionMaster() {
		return this.divisionMaster;
	}

	public void setDivisionMaster(DivisionMaster divisionMaster) {
		this.divisionMaster = divisionMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Dealer_Item_Id", nullable = false)
	public DealerItemMaster getDealerItemMaster() {
		return this.dealerItemMaster;
	}

	public void setDealerItemMaster(DealerItemMaster dealerItemMaster) {
		this.dealerItemMaster = dealerItemMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Invoice_Id", nullable = false)
	public Invoice getInvoice() {
		return this.invoice;
	}

	public void setInvoice(Invoice invoice) {
		this.invoice = invoice;
	}

	@Column(name = "Quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "Rate_Per_Unit", nullable = false)
	public int getRatePerUnit() {
		return this.ratePerUnit;
	}

	public void setRatePerUnit(int ratePerUnit) {
		this.ratePerUnit = ratePerUnit;
	}

	@Column(name = "Owner_Id")
	public Integer getOwnerId() {
		return this.ownerId;
	}

	public void setOwnerId(Integer ownerId) {
		this.ownerId = ownerId;
	}

	@Column(name = "Is_Internal")
	public Boolean getIsInternal() {
		return this.isInternal;
	}

	public void setIsInternal(Boolean isInternal) {
		this.isInternal = isInternal;
	}

	@Column(name = "Created_By")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Created_Date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "Last_Modified_By")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Last_Modified_Date", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "Attribute_1", length = 20)
	public String getAttribute1() {
		return this.attribute1;
	}

	public void setAttribute1(String attribute1) {
		this.attribute1 = attribute1;
	}

	@Column(name = "Attribute_2", length = 20)
	public String getAttribute2() {
		return this.attribute2;
	}

	public void setAttribute2(String attribute2) {
		this.attribute2 = attribute2;
	}

	@Column(name = "Attribute_3", length = 20)
	public String getAttribute3() {
		return this.attribute3;
	}

	public void setAttribute3(String attribute3) {
		this.attribute3 = attribute3;
	}

}
