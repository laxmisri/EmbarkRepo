package com.embark.entity;

// Generated 18 Jul, 2016 5:56:24 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserProfile generated by hbm2java
 */
@Entity
@Table(name = "user_profile", catalog = "salex")
public class UserProfile implements java.io.Serializable {

	private int profileId;
	private OrganizationMaster organizationMaster;
	private DivisionMaster divisionMaster;
	private String profileCode;
	private String profileName;
	private Integer profileLevel;
	private Boolean isActive;
	private Integer ownerId;
	private Boolean isInternal;
	private Integer createdBy;
	private Date createdDate;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;
	private String attribute1;
	private String attribute2;
	private String attribute3;
	private Set<User> users = new HashSet<User>(0);
	private Set<FunctionAccessControl> functionAccessControls = new HashSet<FunctionAccessControl>(
			0);

	public UserProfile() {
	}

	public UserProfile(int profileId, OrganizationMaster organizationMaster,
			DivisionMaster divisionMaster, String profileCode) {
		this.profileId = profileId;
		this.organizationMaster = organizationMaster;
		this.divisionMaster = divisionMaster;
		this.profileCode = profileCode;
	}

	public UserProfile(int profileId, OrganizationMaster organizationMaster,
			DivisionMaster divisionMaster, String profileCode,
			String profileName, Integer profileLevel, Boolean isActive,
			Integer ownerId, Boolean isInternal, Integer createdBy,
			Date createdDate, Integer lastModifiedBy, Date lastModifiedDate,
			String attribute1, String attribute2, String attribute3,
			Set<User> users, Set<FunctionAccessControl> functionAccessControls) {
		this.profileId = profileId;
		this.organizationMaster = organizationMaster;
		this.divisionMaster = divisionMaster;
		this.profileCode = profileCode;
		this.profileName = profileName;
		this.profileLevel = profileLevel;
		this.isActive = isActive;
		this.ownerId = ownerId;
		this.isInternal = isInternal;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
		this.attribute1 = attribute1;
		this.attribute2 = attribute2;
		this.attribute3 = attribute3;
		this.users = users;
		this.functionAccessControls = functionAccessControls;
	}

	@Id
	@Column(name = "Profile_Id", unique = true, nullable = false)
	public int getProfileId() {
		return this.profileId;
	}

	public void setProfileId(int profileId) {
		this.profileId = profileId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Org_Id", nullable = false)
	public OrganizationMaster getOrganizationMaster() {
		return this.organizationMaster;
	}

	public void setOrganizationMaster(OrganizationMaster organizationMaster) {
		this.organizationMaster = organizationMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Div_Id", nullable = false)
	public DivisionMaster getDivisionMaster() {
		return this.divisionMaster;
	}

	public void setDivisionMaster(DivisionMaster divisionMaster) {
		this.divisionMaster = divisionMaster;
	}

	@Column(name = "Profile_Code", nullable = false, length = 20)
	public String getProfileCode() {
		return this.profileCode;
	}

	public void setProfileCode(String profileCode) {
		this.profileCode = profileCode;
	}

	@Column(name = "Profile_Name", length = 20)
	public String getProfileName() {
		return this.profileName;
	}

	public void setProfileName(String profileName) {
		this.profileName = profileName;
	}

	@Column(name = "Profile_Level")
	public Integer getProfileLevel() {
		return this.profileLevel;
	}

	public void setProfileLevel(Integer profileLevel) {
		this.profileLevel = profileLevel;
	}

	@Column(name = "Is_Active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "Owner_Id")
	public Integer getOwnerId() {
		return this.ownerId;
	}

	public void setOwnerId(Integer ownerId) {
		this.ownerId = ownerId;
	}

	@Column(name = "Is_Internal")
	public Boolean getIsInternal() {
		return this.isInternal;
	}

	public void setIsInternal(Boolean isInternal) {
		this.isInternal = isInternal;
	}

	@Column(name = "Created_By")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Created_Date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "Last_Modified_By")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Last_Modified_Date", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "Attribute_1", length = 20)
	public String getAttribute1() {
		return this.attribute1;
	}

	public void setAttribute1(String attribute1) {
		this.attribute1 = attribute1;
	}

	@Column(name = "Attribute_2", length = 20)
	public String getAttribute2() {
		return this.attribute2;
	}

	public void setAttribute2(String attribute2) {
		this.attribute2 = attribute2;
	}

	@Column(name = "Attribute_3", length = 20)
	public String getAttribute3() {
		return this.attribute3;
	}

	public void setAttribute3(String attribute3) {
		this.attribute3 = attribute3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userProfile")
	public Set<FunctionAccessControl> getFunctionAccessControls() {
		return this.functionAccessControls;
	}

	public void setFunctionAccessControls(
			Set<FunctionAccessControl> functionAccessControls) {
		this.functionAccessControls = functionAccessControls;
	}

}
