package com.embark.entity;

// Generated 18 Jul, 2016 5:56:24 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "salex")
public class User implements java.io.Serializable {

	private int userId;
	private OrganizationMaster organizationMaster;
	private DivisionMaster divisionMaster;
	private UserProfile userProfile;
	private String employeeId;
	private String firstName;
	private String lastName;
	private String phone;
	private String email;
	private String userName;
	private String password;
	private Boolean isActive;
	private Integer ownerId;
	private Boolean isInternal;
	private Integer createdBy;
	private Date createdDate;
	private Integer lastModifiedBy;
	private Date lastModifiedDate;
	private String attribute2;
	private String attribute3;
	private Set<UserMap> userMaps = new HashSet<UserMap>(0);
	private Set<PasswordSecurity> passwordSecurities = new HashSet<PasswordSecurity>(
			0);

	public User() {
	}

	public User(int userId, OrganizationMaster organizationMaster,
			DivisionMaster divisionMaster) {
		this.userId = userId;
		this.organizationMaster = organizationMaster;
		this.divisionMaster = divisionMaster;
	}

	public User(int userId, OrganizationMaster organizationMaster,
			DivisionMaster divisionMaster, UserProfile userProfile,
			String employeeId, String firstName, String lastName, String phone,
			String email, String userName, String password, Boolean isActive,
			Integer ownerId, Boolean isInternal, Integer createdBy,
			Date createdDate, Integer lastModifiedBy, Date lastModifiedDate,
			String attribute2, String attribute3, Set<UserMap> userMaps,
			Set<PasswordSecurity> passwordSecurities) {
		this.userId = userId;
		this.organizationMaster = organizationMaster;
		this.divisionMaster = divisionMaster;
		this.userProfile = userProfile;
		this.employeeId = employeeId;
		this.firstName = firstName;
		this.lastName = lastName;
		this.phone = phone;
		this.email = email;
		this.userName = userName;
		this.password = password;
		this.isActive = isActive;
		this.ownerId = ownerId;
		this.isInternal = isInternal;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.lastModifiedBy = lastModifiedBy;
		this.lastModifiedDate = lastModifiedDate;
		this.attribute2 = attribute2;
		this.attribute3 = attribute3;
		this.userMaps = userMaps;
		this.passwordSecurities = passwordSecurities;
	}

	@Id
	@Column(name = "User_Id", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Org_Id", nullable = false)
	public OrganizationMaster getOrganizationMaster() {
		return this.organizationMaster;
	}

	public void setOrganizationMaster(OrganizationMaster organizationMaster) {
		this.organizationMaster = organizationMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Div_Id", nullable = false)
	public DivisionMaster getDivisionMaster() {
		return this.divisionMaster;
	}

	public void setDivisionMaster(DivisionMaster divisionMaster) {
		this.divisionMaster = divisionMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Profile_Id")
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@Column(name = "Employee_Id", length = 20)
	public String getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(String employeeId) {
		this.employeeId = employeeId;
	}

	@Column(name = "First_Name", length = 20)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "Last_Name", length = 20)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "Phone", length = 20)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "Email", length = 20)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "User_Name", length = 20)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "Password", length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "Is_Active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "Owner_Id")
	public Integer getOwnerId() {
		return this.ownerId;
	}

	public void setOwnerId(Integer ownerId) {
		this.ownerId = ownerId;
	}

	@Column(name = "Is_Internal")
	public Boolean getIsInternal() {
		return this.isInternal;
	}

	public void setIsInternal(Boolean isInternal) {
		this.isInternal = isInternal;
	}

	@Column(name = "Created_By")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Created_Date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "Last_Modified_By")
	public Integer getLastModifiedBy() {
		return this.lastModifiedBy;
	}

	public void setLastModifiedBy(Integer lastModifiedBy) {
		this.lastModifiedBy = lastModifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Last_Modified_Date", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "Attribute_2", length = 20)
	public String getAttribute2() {
		return this.attribute2;
	}

	public void setAttribute2(String attribute2) {
		this.attribute2 = attribute2;
	}

	@Column(name = "Attribute_3", length = 20)
	public String getAttribute3() {
		return this.attribute3;
	}

	public void setAttribute3(String attribute3) {
		this.attribute3 = attribute3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserMap> getUserMaps() {
		return this.userMaps;
	}

	public void setUserMaps(Set<UserMap> userMaps) {
		this.userMaps = userMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<PasswordSecurity> getPasswordSecurities() {
		return this.passwordSecurities;
	}

	public void setPasswordSecurities(Set<PasswordSecurity> passwordSecurities) {
		this.passwordSecurities = passwordSecurities;
	}

}
